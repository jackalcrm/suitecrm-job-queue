<?php
/*
 * Your installation or use of this SugarCRM file is subject to the applicable
 * terms available at
 * http://support.sugarcrm.com/Resources/Master_Subscription_Agreements/.
 * If you do not agree to all of the applicable terms or do not have the
 * authority to bind the entity as an authorized representative, then do not
 * install or use this SugarCRM file.
 *
 * Copyright (C) SugarCRM Inc. All rights reserved.
 */
/**
 * THIS CLASS IS GENERATED BY MODULE BUILDER
 * PLEASE DO NOT CHANGE THIS CLASS
 * PLACE ANY CUSTOMIZATIONS IN job_queue
 */


class job_queue_sugar extends Basic {
    public $new_schema = true;
    public $module_dir = 'job_queue';
    public $object_name = 'job_queue';
    public $table_name = 'job_queue';

    const JOB_STATUS_QUEUED = 'queued';
    const JOB_STATUS_RUNNING = 'running';
    const JOB_STATUS_DONE = 'done';

    // Resolutions.
    const JOB_PENDING = 'queued';
    const JOB_PARTIAL = 'partial';
    const JOB_SUCCESS = 'success';
    const JOB_FAILURE = 'failure';
    const JOB_RUNNING = 'running';
    const JOB_CANCELLED = 'cancelled';

    // schema attributes
    public $id;
    public $name;
    public $deleted;
    public $date_entered;
    public $date_modified;
    public $scheduler_id;
    public $execute_time; // when to execute
    public $status;
    public $resolution;
    public $message;
    public $target; // URL or function name
    public $data; // Data set
    public $requeue; // Requeue on failure?
    public $retry_count;
    public $failure_count;
    /**
     * @depricated
     * @var int
     */
    public $job_delay=0; // Frequency to run it
    public $assigned_user_id; // User under which the task is running
    public $client; // Client ID that owns this job
    public $execute_time_db;
    public $percent_complete; // how much of the job is done
    public $module;
    public $fallible;
    public $rerun;
    public $interface = true;

    //custom
    public $priority;
    public $run_now;
    public $cron_id;

    /**
     * The group that the job belongs to
     *
     * @var String
     */
    public $job_group;


    public $disable_row_level_security = true;
    // related fields
    var $job_name;	// the Scheduler's 'name' field
    var $job;		// the Scheduler's 'job' field
    // object specific attributes
    public $user; // User object
    var $scheduler; // Scheduler parent
    public $min_interval = 30; // minimal interval for job reruns
    protected $job_done = true;
    protected $old_user;
    
    public function bean_implements($interface){
        switch($interface){
            case 'ACL': return true;
        }
        return false;
    }
    
}